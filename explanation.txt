Class:
The building block of C++ that leads to Object-Oriented programming is a Class.
It is a user-defined data type, which holds its own data members and member functions, 
which can be accessed and used by creating an instance of that class. 
A class is like a blueprint for an object.

Object:
An Object is an instance of a Class. When a class is defined, no memory is allocated 
but when it is instantiated (i.e. an object is created) memory is allocated.

Encapsulation:
Encapsulation is defined as wrapping up of data and information under a single unit. In Object-Oriented Programming, Encapsulation is defined as binding together the data and the functions that manipulate them

Abstraction:
Abstraction means displaying only essential information and hiding the details. Data abstraction refers to providing only essential information about the data to the outside world, hiding the background details or implementation.

Polymorphism:
The word polymorphism means having many forms. In simple words, we can define polymorphism as the ability of a message to be displayed in more than one form.

Inheritance:
The capability of a class to derive properties and characteristics from another class is called Inheritance.

------------------------------------GAME-------------------------------------------
Classes used:
	1.Game
	2.GameObject
	3.Ball
	4.Enemy
	5.Player
	6.Map
	7.TextureManager
	8.Scoreboard

1.Game:
	Game is a class in which we have defined objects of other classes,
	it has functions like :
	1.Init(char const* title, int posx, int posy, int width, int height,bool fullscreen):
	Init function initializes all the SDL systems , the font, the image library etc
	it has exception handling to handle any runtime error if a system is not initialized
	properly and throw respective errors.
	2.HandleEvents():
	It handles all the events of in this case the QUIT event.
	3.Update():
	It updates the position of gameobjects and the respective functions.
	4.Render():
	It renders gameobjects and the map on the screen.
	5.clean():
	It cleans the game ie it destroys the objects created on heap
	it destroys the window, renderer and quits all the SDL subsystems.

	
